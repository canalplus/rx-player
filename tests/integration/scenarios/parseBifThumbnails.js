const canalBIF = require("arraybuffer-loader!../../contents/imagetracks/example.bif");
import { expect } from "chai";
import { parseBifThumbnails } from "../../../src/tools";

describe("parseBifThumbnails", () => {
  it("should correctly parse given thumbnails", () => {
    const parsedBIFs = parseBifThumbnails(canalBIF);
    expect(typeof parsedBIFs).to.equal("object");
    expect(parsedBIFs.version).to.equal("0.0.0.0");
    expect(parsedBIFs.images).to.be.an.instanceof(Array);
    expect(parsedBIFs.images.length).to.equal(76);
    expect(parsedBIFs.images[0].startTime).to.equal(0);
    expect(parsedBIFs.images[0].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[0].image.byteLength).to.equal(4034);
    expect(parsedBIFs.images[1].startTime).to.equal(1000);
    expect(parsedBIFs.images[1].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[1].image.byteLength).to.equal(4034);
    expect(parsedBIFs.images[2].startTime).to.equal(2000);
    expect(parsedBIFs.images[2].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[2].image.byteLength).to.equal(4034);
    expect(parsedBIFs.images[3].startTime).to.equal(3000);
    expect(parsedBIFs.images[3].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[3].image.byteLength).to.equal(4040);
    expect(parsedBIFs.images[4].startTime).to.equal(4000);
    expect(parsedBIFs.images[4].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[4].image.byteLength).to.equal(4035);
    expect(parsedBIFs.images[5].startTime).to.equal(5000);
    expect(parsedBIFs.images[5].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[5].image.byteLength).to.equal(4035);
    expect(parsedBIFs.images[6].startTime).to.equal(6000);
    expect(parsedBIFs.images[6].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[6].image.byteLength).to.equal(4034);
    expect(parsedBIFs.images[7].startTime).to.equal(7000);
    expect(parsedBIFs.images[7].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[7].image.byteLength).to.equal(1265);
    expect(parsedBIFs.images[8].startTime).to.equal(8000);
    expect(parsedBIFs.images[8].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[8].image.byteLength).to.equal(1265);
    expect(parsedBIFs.images[9].startTime).to.equal(9000);
    expect(parsedBIFs.images[9].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[9].image.byteLength).to.equal(1265);
    expect(parsedBIFs.images[10].startTime).to.equal(10000);
    expect(parsedBIFs.images[10].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[10].image.byteLength).to.equal(4098);
    expect(parsedBIFs.images[11].startTime).to.equal(11000);
    expect(parsedBIFs.images[11].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[11].image.byteLength).to.equal(4446);
    expect(parsedBIFs.images[12].startTime).to.equal(12000);
    expect(parsedBIFs.images[12].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[12].image.byteLength).to.equal(6267);
    expect(parsedBIFs.images[13].startTime).to.equal(13000);
    expect(parsedBIFs.images[13].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[13].image.byteLength).to.equal(4704);
    expect(parsedBIFs.images[14].startTime).to.equal(14000);
    expect(parsedBIFs.images[14].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[14].image.byteLength).to.equal(1450);
    expect(parsedBIFs.images[15].startTime).to.equal(15000);
    expect(parsedBIFs.images[15].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[15].image.byteLength).to.equal(5005);
    expect(parsedBIFs.images[73].startTime).to.equal(73000);
    expect(parsedBIFs.images[73].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[73].image.byteLength).to.equal(1265);
    expect(parsedBIFs.images[74].startTime).to.equal(74000);
    expect(parsedBIFs.images[74].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[74].image.byteLength).to.equal(1265);
    expect(parsedBIFs.images[75].startTime).to.equal(75000);
    expect(parsedBIFs.images[75].image).to.be.an.instanceof(ArrayBuffer);
    expect(parsedBIFs.images[75].image.byteLength).to.equal(1265);
  });
});
