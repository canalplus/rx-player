{
  "name": "rx-player",
  "author": "Canal+",
  "version": "3.11.1",
  "description": "Canal+ HTML5 Video Player",
  "main": "./dist/rx-player.js",
  "keywords": [
    "dash",
    "eme",
    "hss",
    "html5",
    "mediasource",
    "mse",
    "reactive",
    "rx",
    "rxjs",
    "smooth",
    "streaming",
    "typescript",
    "video"
  ],
  "browser": "./dist/rx-player.js",
  "homepage": "https://github.com/canalplus/rx-player",
  "bugs": "https://github.com/canalplus/rx-player/issues",
  "license": "Apache-2.0",
  "sideEffects": false,
  "scripts-info": {
    "build": "Build the player in dist/rx-player.js",
    "build:all": "Perform all possible builds of the player (build, build:min and build:modular)",
    "build:min": "Build the player and minify it in dist/rx-player.min.js",
    "build:min:report": "Build the player then minify it in dist/rx-player.min.js and display a report on its size",
    "build:modular": "Build the modular build of the rx-player and create corresponding files and directories.",
    "build:report": "Build the player in dist/rx-player.js and display a report on its size",
    "build:watch": "Build the player in dist/rx-player.js each times the files update",
    "certificate": "Generate a certificate to be able to use HTTPS locally for the demo pages (`npm run start` and `npm run standalone` will then listen to HTTPS requests through a communicated port)",
    "check": "Check the validity of the src directory by running the linter, type checker and unit tests",
    "check:all": "Check the validity of the whole project by running linters, type checkers and every tests",
    "check:types": "Check TypeScript typings in src",
    "demo": "Build the demo in demo/bundle.js",
    "demo:min": "Build the demo and minify it in demo/bundle.js",
    "demo:watch": "Build the demo in demo/bundle.js each times the files update.",
    "doc": "Generate the HTML documentation in doc/pages",
    "info": "Display the description of all npm scripts for this project",
    "lint": "Lint rx-player source files",
    "lint:demo": "Lint demo source files",
    "lint:tests": "Lint integration tests source files",
    "standalone": "Build and launch the \"standalone\" demo (without any UI) on a local server. Re-build on file updates.",
    "start": "Build and launch the \"full\" demo (with a UI) on a local server. Re-build on file updates.",
    "test": "Launch unit and integration tests in multiple browser environments",
    "test:integration": "Launch integration tests in multiple browser environments",
    "test:integration:chrome": "Launch integration tests in a Chrome browser.",
    "test:integration:chrome:watch": "Launch integration tests in Chrome each times the files update",
    "test:integration:coverage": "Launch integration tests in multiple browser environments and produce a coverage report in tests/integration/coverage",
    "test:integration:firefox": "Launch integration tests in a Firefox browser.",
    "test:integration:firefox:watch": "Launch integration tests in Firefox each times the files update",
    "test:memory": "Launch memory tests",
    "test:memory:chrome:watch": "Launch memory tests in Chrome each times the files update",
    "test:unit": "Launch unit tests",
    "test:unit:coverage": "Launch unit tests and produce a coverage report",
    "update-version": "Update the version to the string given in argument (example: `npm run n pdate-version 3.8.0`). Will update the codebase and perform every builds."
  },
  "scripts": {
    "build": "webpack --progress --config webpack.config.js",
    "build:all": "npm run build && npm run build:min && npm run build:modular",
    "build:min": "cross-env RXP_MINIFY=true webpack --progress --config webpack.config.js",
    "build:min:report": "cross-env RXP_SIZE_REPORT=true cross-env RXP_MINIFY=true webpack --progress --config webpack.config.js",
    "build:modular": "./scripts/generate_builds",
    "build:report": "cross-env RXP_SIZE_REPORT=true webpack --progress --config webpack.config.js",
    "build:watch": "webpack --progress --config webpack.config.js -w",
    "certificate": "./scripts/generate_certificate",
    "check": "npm run check:types && npm run lint && npm run test:unit",
    "check:all": "npm run check:types && npm run lint && npm run lint:demo && npm run lint:tests && npm run test && npm run test:memory",
    "check:appveyor": "npm run check:types && npm run lint && npm run lint:demo && npm run lint:tests && npm run test:appveyor && npm run test:memory",
    "check:travis": "npm run check:types && npm run lint && npm run lint:demo && npm run lint:tests && npm run test:travis && npm run test:memory:travis",
    "check:types": "tsc --noEmit --project .",
    "demo": "webpack --progress --config webpack-demo.config.js",
    "demo:min": "cross-env RXP_MINIFY=true webpack --progress --config webpack-demo.config.js",
    "demo:watch": "webpack --progress --config webpack-demo.config.js -w",
    "doc": "rm -rf doc/generated; node ./scripts/doc-generator/index.js doc/ doc/generated",
    "info": "npm-scripts-info",
    "lint": "tslint --project . -c tslint.json \"src/**/*.ts\"",
    "lint:demo": "eslint demo/**/*.js demo/**/*.jsx",
    "lint:tests": "eslint tests/**/*.js",
    "prepare:modular": "tsc -p tsconfig.modules.json",
    "prepublishOnly": "npm run build:modular",
    "standalone": "cross-env RXP_ENV=development node ./demo/standalone/server.js",
    "start": "cross-env RXP_ENV=development node ./demo/full/server.js",
    "test": "npm run test:unit && npm run test:integration",
    "test:appveyor": "npm run test:unit",
    "test:integration": "karma start tests/integration/karma.conf.js",
    "test:integration:appveyor": "node --max-old-space-size=2048 ./node_modules/karma/bin/karma start ./tests/integration/karma.conf.js",
    "test:integration:chrome": "karma start tests/integration/karma.conf.js --browsers Chrome",
    "test:integration:chrome:watch": "cross-env RXP_TESTS_WATCH=true karma start tests/integration/karma.conf.js --browsers Chrome",
    "test:integration:coverage": "cross-env RXP_COVERAGE=true karma start tests/integration/karma.conf.js",
    "test:integration:firefox": "karma start tests/integration/karma.conf.js --browsers Firefox",
    "test:integration:firefox:watch": "cross-env RXP_TESTS_WATCH=true karma start tests/integration/karma.conf.js --browsers Firefox",
    "test:integration:travis": "karma start tests/integration/karma.travis.conf.js",
    "test:memory": "karma start tests/memory/karma.conf.js",
    "test:memory:chrome:watch": "cross-env RXP_TESTS_WATCH=true karma start tests/memory/karma.conf.js --browsers ChromeMemory",
    "test:memory:travis": "karma start tests/memory/karma.travis.conf.js",
    "test:travis": "npm run test:unit",
    "test:unit": "jest",
    "test:unit:coverage": "cross-env RXP_COVERAGE=true jest",
    "update-version": "npm run version --git-tag-version=false",
    "version": "./scripts/update-version"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/canalplus/rx-player.git"
  },
  "dependencies": {
    "deep-equal": "1.0.1",
    "next-tick": "1.0.0",
    "object-assign": "4.1.1",
    "pinkie": "2.0.4",
    "rxjs": "6.4.0"
  },
  "devDependencies": {
    "@babel/core": "7.3.4",
    "@babel/polyfill": "7.2.5",
    "@babel/preset-env": "7.3.4",
    "@babel/preset-react": "7.0.0",
    "@types/chai": "4.1.7",
    "@types/deep-equal": "1.0.1",
    "@types/jest": "24.0.9",
    "@types/mocha": "5.2.6",
    "@types/node": "11.10.4",
    "@types/sinon": "7.0.8",
    "arraybuffer-loader": "1.0.7",
    "babel-loader": "8.0.5",
    "chai": "4.2.0",
    "chart.js": "2.7.3",
    "cheerio": "1.0.0-rc.2",
    "cross-env": "5.2.0",
    "css-loader": "2.1.0",
    "eslint": "5.15.1",
    "eslint-plugin-react": "7.12.4",
    "express": "4.16.4",
    "file-loader": "3.0.1",
    "highlight.js": "9.15.6",
    "istanbul-instrumenter-loader": "3.0.1",
    "jest": "24.5.0",
    "jsx-loader": "0.13.2",
    "karma": "4.0.1",
    "karma-chrome-launcher": "2.2.0",
    "karma-coverage-istanbul-reporter": "2.0.5",
    "karma-firefox-launcher": "1.1.0",
    "karma-mocha": "1.3.0",
    "karma-mocha-reporter": "2.2.5",
    "karma-webpack": "3.0.5",
    "markdown-it": "8.4.2",
    "markdown-it-emoji": "1.4.0",
    "mocha": "6.0.2",
    "mocha-loader": "2.0.1",
    "npm-scripts-info": "0.3.9",
    "raw-loader": "1.0.0",
    "react": "16.8.3",
    "react-dom": "16.8.3",
    "sinon": "7.2.7",
    "style-loader": "0.23.1",
    "ts-jest": "24.0.0",
    "ts-loader": "5.3.3",
    "tslint": "5.13.1",
    "typescript": "3.3.3333",
    "uglifyjs-webpack-plugin": "2.1.2",
    "url-loader": "1.1.2",
    "webpack": "4.29.6",
    "webpack-bundle-analyzer": "3.1.0",
    "webpack-cli": "3.2.3"
  }
}
