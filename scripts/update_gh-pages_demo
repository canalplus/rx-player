#!/bin/bash

################################################################################
# This file allows to automatically update the full demo on the gh-pages branch.
#
# To use it:
#
#   1. Go to a clean master branch
#
#   2. Make sure the rx-player you want to use is bundled as
#      dist/rx-player.min.js
#
#   3. Update the full demo files (in demo/full) as you want
#
#   4. Call this script.
#      Some user interactions will be needed to avoid doing unwanted commits.
#
#   5. That's it!
#      A commit should have been pushed to the gh-pages.
#
################################################################################

set -e

current_branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
current_version=$(cat VERSION)

if ! [ "$current_branch" == "master" ]; then
  echo $current_branch
  echo "ERROR: The current branch should be master"
  exit 1;
fi

# Generate demo
npm run demo:min

if [ -n "$(git status --porcelain doc)" ]; then
  echo "ERROR: Please commit your modifications to master"
  exit 1;
fi

tmpFontsDir=$(mktemp -d)
tmpAssetsDir=$(mktemp -d)
tmpStylesDir=$(mktemp -d)
tmpDemoFile=$(mktemp)
tmpRxPlayerFile=$(mktemp)
tmpIndexFile=$(mktemp)
tmpFaviconFile=$(mktemp)

cp -r demo/full/fonts $tmpFontsDir -v
cp -r demo/full/assets $tmpAssetsDir -v
cp -r demo/full/styles $tmpStylesDir -v
cp demo/full/bundle.js $tmpDemoFile -v
cp demo/full/index.html $tmpIndexFile -v
cp demo/full/plus.ico $tmpFaviconFile -v
cp dist/rx-player.min.js $tmpRxPlayerFile -v

# update gh-pages
git checkout gh-pages
git pull origin gh-pages

rm -rf "versions/$current_version/demo"
mkdir -p "versions/$current_version/demo"
rm index.html
rm plus.ico
rm lib.js
rm bundle.js
rm -rf fonts
rm -rf assets
rm -rf styles
mv $tmpIndexFile "versions/$current_version/demo/index.html"
mv $tmpFaviconFile "versions/$current_version/demo/plus.ico"
mv $tmpRxPlayerFile "versions/$current_version/demo/lib.js"
mv $tmpDemoFile "versions/$current_version/demo/bundle.js"
mv $tmpFontsDir/fonts "versions/$current_version/demo/fonts"
mv $tmpAssetsDir/assets "versions/$current_version/demo/assets"
mv $tmpStylesDir/styles "versions/$current_version/demo/styles"
ln -s "./versions/$current_version/demo/index.html" index.html
ln -s "./versions/$current_version/demo/plus.ico" plus.ico
ln -s "./versions/$current_version/demo/lib.js" lib.js
ln -s "./versions/$current_version/demo/bundle.js" bundle.js
ln -s "./versions/$current_version/demo/fonts" fonts
ln -s "./versions/$current_version/demo/assets" assets
ln -s "./versions/$current_version/demo/styles" styles

rm -rf $tmpFontsDir
rm -rf $tmpAssetsDir
rm -rf $tmpStylesDir
rm -rf $tmpIndexFile
rm -rf $tmpFaviconFile
rm -rf $tmpRxPlayerFile
rm -rf $tmpDemoFile

if [ -n "$(git status --porcelain demo/full)" ]; then
  echo "-- Current Status on gh-pages: --"
  echo ""
  git status lib.js bundle.js styles fonts assets index.html

  while : ; do
    echo ""
    echo "We will push the demo to gh-pages."
    REPLY=""
    read -p "do you want to continue [y/d/s/a/c/t/h] (h for help) ? " -n 1 -r
    echo ""

    if [[ $REPLY =~ ^[Hh](elp)?$ ]]; then
      echo ""
      echo ""
      echo "+- help -------------------------------------------------+"
      echo "| y: commit and continue                                 |"
      echo "| d: see diff                                            |"
      echo "| s: see status                                          |"
      echo "| a: abort script from here                              |"
      echo "| c: checkout from this commit and go to the next one    |"
      echo "| t: stash this commit and go to the next one            |"
      echo "| h: see this help                                       |"
      echo "+--------------------------------------------------------+"
    elif [[ $REPLY =~ ^[Yy](es)?$ ]]; then
      git add lib.js bundle.js styles fonts assets index.html plus.ico "versions/$current_version/demo"
      git commit -m "demo: deploy $current_version to the gh-pages" -S
      git push origin gh-pages
      break
    elif [[ $REPLY =~ ^[Dd](iff)?$ ]]; then
      git diff lib.js bundle.js styles fonts assets index.html || true # ignore when return 1
    elif [[ $REPLY =~ ^[Ss](tatus)?$ ]]; then
      git status lib.js bundle.js styles fonts assets index.html
    elif [[ $REPLY =~ ^[Aa](bort)?$ ]]; then
      echo "exiting"
      exit 0
    elif [[ $REPLY =~ ^[Cc](heckout)?$ ]]; then
      git checkout lib.js bundle.js styles fonts assets index.html
    elif [[ $REPLY =~ ^([Tt]|([Ss]tash))?$ ]]; then
      git stash -u push lib.js bundle.js styles fonts assets index.html
      break
    fi
  done
else
  echo "nothing to do on the gh-pages branch"
fi

git checkout master
